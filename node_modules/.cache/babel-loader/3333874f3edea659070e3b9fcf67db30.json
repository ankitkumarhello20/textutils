{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\OneDrive\\\\Desktop\\\\bootstrap contro\\\\textutils\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport './App.css';\nimport About from './components/About';\nimport React, { useState } from \"react\";\nimport Alert from './components/Alert';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"; //automatically included when we type <Navbar>\n// this is app\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setmode] = useState('light'); //whether dark mode is enabled\n\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 3000);\n  };\n\n  const toggleMode = () => {\n    if (mode == 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = 'black';\n      showAlert('Dark mode has been enabled', 'success');\n      document.title = 'TextUtils -Dark Mode';\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode has been enabled', 'success');\n      document.title = 'TextUtils -Light Mode';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/about\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(Textform, {\n            showAlert: showAlert,\n            heading: \"Enter text to analyze\",\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n} // function App() {\n//   return (\n//     <>                     {/*these are user defined userr wish can name anything  title/aboutText */}\n//        {/* <Navbar title=\"TextUtil\" aboutText=\"text\"/> */}\n//        <Navbar/>        \n//        {/* nothing is set here so defaullt values are thrown ,if it has no default value and it.isRequired then it would throw error  */}\n//     </>\n//   );\n// }\n\n\n_s(App, \"IMrho2uU+M4ZDYHrspFeVdNrlUY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Textform","About","React","useState","Alert","BrowserRouter","Router","Switch","Route","Link","App","mode","setmode","alert","setalert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title"],"sources":["C:/Users/ankit/OneDrive/Desktop/bootstrap contro/textutils/src/App.js"],"sourcesContent":["import Navbar from './components/Navbar';\r\nimport Textform from './components/Textform';\r\nimport './App.css';\r\nimport About from './components/About';\r\nimport React, {useState} from \"react\";\r\nimport Alert from './components/Alert';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n//automatically included when we type <Navbar>\r\n// this is app\r\n\r\nfunction App() {\r\n  const [mode, setmode] = useState('light'); //whether dark mode is enabled\r\n  const [alert, setalert] = useState(null); \r\n\r\n  const showAlert=(message,type)=>{\r\n      setalert({\r\n        msg:message,\r\n        type: type\r\n      })\r\n      setTimeout(() => {\r\n        setalert(null);\r\n      }, 3000);\r\n  }\r\n  const toggleMode = ()=>{\r\n    if(mode == 'light'){\r\n      setmode('dark');\r\n      document.body.style.backgroundColor='black'\r\n      showAlert('Dark mode has been enabled','success')\r\n      document.title='TextUtils -Dark Mode'\r\n    }\r\n    else{ \r\n      setmode('light');\r\n      document.body.style.backgroundColor='white'\r\n      showAlert('Light mode has been enabled','success')\r\n      document.title='TextUtils -Light Mode'\r\n    }\r\n  } \r\n  return (\r\n    <>                     \r\n       <Navbar mode={mode} toggleMode={toggleMode}/>  \r\n       <Alert alert={alert}/>\r\n       {/* container is the defined class in bootstrap which center the text and my-3  3pxis spacing in y-axis */}\r\n       <Router>\r\n          <Switch>\r\n            {/* foe exact url match  */}\r\n          <Route exact path=\"/about\"  > <About />\r\n          </Route>\r\n          \r\n          <Route exact path=\"/\" > <Textform  showAlert={showAlert} heading =\"Enter text to analyze\" mode={mode}/>\r\n         \r\n          </Route>\r\n          </Switch>\r\n               \r\n         </Router>\r\n      \r\n      \r\n           \r\n    </>\r\n  );\r\n}\r\n// function App() {\r\n//   return (\r\n//     <>                     {/*these are user defined userr wish can name anything  title/aboutText */}\r\n//        {/* <Navbar title=\"TextUtil\" aboutText=\"text\"/> */}\r\n//        <Navbar/>        \r\n//        {/* nothing is set here so defaullt values are thrown ,if it has no default value and it.isRequired then it would throw error  */}\r\n       \r\n//     </>\r\n//   );\r\n// }\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP,C,CAMA;AACA;;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,OAAD,CAAhC,CADa,CAC8B;;EAC3C,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;;EAEA,MAAMY,SAAS,GAAC,CAACC,OAAD,EAASC,IAAT,KAAgB;IAC5BH,QAAQ,CAAC;MACPI,GAAG,EAACF,OADG;MAEPC,IAAI,EAAEA;IAFC,CAAD,CAAR;IAIAE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAD,CAAR;IACD,CAFS,EAEP,IAFO,CAAV;EAGH,CARD;;EASA,MAAMM,UAAU,GAAG,MAAI;IACrB,IAAGT,IAAI,IAAI,OAAX,EAAmB;MACjBC,OAAO,CAAC,MAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,OAApC;MACAT,SAAS,CAAC,4BAAD,EAA8B,SAA9B,CAAT;MACAM,QAAQ,CAACI,KAAT,GAAe,sBAAf;IACD,CALD,MAMI;MACFb,OAAO,CAAC,OAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,OAApC;MACAT,SAAS,CAAC,6BAAD,EAA+B,SAA/B,CAAT;MACAM,QAAQ,CAACI,KAAT,GAAe,uBAAf;IACD;EACF,CAbD;;EAcA,oBACE;IAAA,wBACG,QAAC,MAAD;MAAQ,IAAI,EAAEd,IAAd;MAAoB,UAAU,EAAES;IAAhC;MAAA;MAAA;MAAA;IAAA,QADH,eAEG,QAAC,KAAD;MAAO,KAAK,EAAEP;IAAd;MAAA;MAAA;MAAA;IAAA,QAFH,eAIG,QAAC,MAAD;MAAA,uBACG,QAAC,MAAD;QAAA,wBAEA,QAAC,KAAD;UAAO,KAAK,MAAZ;UAAa,IAAI,EAAC,QAAlB;UAAA,6BAA8B,QAAC,KAAD;YAAA;YAAA;YAAA;UAAA,QAA9B;QAAA;UAAA;UAAA;UAAA;QAAA,QAFA,eAKA,QAAC,KAAD;UAAO,KAAK,MAAZ;UAAa,IAAI,EAAC,GAAlB;UAAA,6BAAwB,QAAC,QAAD;YAAW,SAAS,EAAEE,SAAtB;YAAiC,OAAO,EAAE,uBAA1C;YAAkE,IAAI,EAAEJ;UAAxE;YAAA;YAAA;YAAA;UAAA,QAAxB;QAAA;UAAA;UAAA;UAAA;QAAA,QALA;MAAA;QAAA;QAAA;QAAA;MAAA;IADH;MAAA;MAAA;MAAA;IAAA,QAJH;EAAA,gBADF;AAsBD,C,CACD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;GA3DSD,G;;KAAAA,G;AA6DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}